/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-10-16 at 01:24:52 UTC 
 * Modify at your own risk.
 */

package com.example.pedro.myapplication.backend1.users;

/**
 * Service definition for Users (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link UsersRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Users extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.20.0 of the users library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "users/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Users(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Users(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "addUser".
   *
   * This request holds the parameters needed by the users server.  After setting any optional
   * parameters, call the {@link AddUser#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.example.pedro.myapplication.backend1.users.model.User}
   * @return the request
   */
  public AddUser addUser(com.example.pedro.myapplication.backend1.users.model.User content) throws java.io.IOException {
    AddUser result = new AddUser(content);
    initialize(result);
    return result;
  }

  public class AddUser extends UsersRequest<Void> {

    private static final String REST_PATH = "addUser";

    /**
     * Create a request for the method "addUser".
     *
     * This request holds the parameters needed by the the users server.  After setting any optional
     * parameters, call the {@link AddUser#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddUser#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.example.pedro.myapplication.backend1.users.model.User}
     * @since 1.13
     */
    protected AddUser(com.example.pedro.myapplication.backend1.users.model.User content) {
      super(Users.this, "POST", REST_PATH, content, Void.class);
    }

    @Override
    public AddUser setAlt(java.lang.String alt) {
      return (AddUser) super.setAlt(alt);
    }

    @Override
    public AddUser setFields(java.lang.String fields) {
      return (AddUser) super.setFields(fields);
    }

    @Override
    public AddUser setKey(java.lang.String key) {
      return (AddUser) super.setKey(key);
    }

    @Override
    public AddUser setOauthToken(java.lang.String oauthToken) {
      return (AddUser) super.setOauthToken(oauthToken);
    }

    @Override
    public AddUser setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddUser) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddUser setQuotaUser(java.lang.String quotaUser) {
      return (AddUser) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddUser setUserIp(java.lang.String userIp) {
      return (AddUser) super.setUserIp(userIp);
    }

    @Override
    public AddUser set(String parameterName, Object value) {
      return (AddUser) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "logIn".
   *
   * This request holds the parameters needed by the users server.  After setting any optional
   * parameters, call the {@link LogIn#execute()} method to invoke the remote operation.
   *
   * @param username
   * @param password
   * @return the request
   */
  public LogIn logIn(java.lang.String username, java.lang.String password) throws java.io.IOException {
    LogIn result = new LogIn(username, password);
    initialize(result);
    return result;
  }

  public class LogIn extends UsersRequest<com.example.pedro.myapplication.backend1.users.model.User> {

    private static final String REST_PATH = "logIn/{username}/{password}";

    /**
     * Create a request for the method "logIn".
     *
     * This request holds the parameters needed by the the users server.  After setting any optional
     * parameters, call the {@link LogIn#execute()} method to invoke the remote operation. <p> {@link
     * LogIn#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
     * be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param username
     * @param password
     * @since 1.13
     */
    protected LogIn(java.lang.String username, java.lang.String password) {
      super(Users.this, "POST", REST_PATH, null, com.example.pedro.myapplication.backend1.users.model.User.class);
      this.username = com.google.api.client.util.Preconditions.checkNotNull(username, "Required parameter username must be specified.");
      this.password = com.google.api.client.util.Preconditions.checkNotNull(password, "Required parameter password must be specified.");
    }

    @Override
    public LogIn setAlt(java.lang.String alt) {
      return (LogIn) super.setAlt(alt);
    }

    @Override
    public LogIn setFields(java.lang.String fields) {
      return (LogIn) super.setFields(fields);
    }

    @Override
    public LogIn setKey(java.lang.String key) {
      return (LogIn) super.setKey(key);
    }

    @Override
    public LogIn setOauthToken(java.lang.String oauthToken) {
      return (LogIn) super.setOauthToken(oauthToken);
    }

    @Override
    public LogIn setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (LogIn) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public LogIn setQuotaUser(java.lang.String quotaUser) {
      return (LogIn) super.setQuotaUser(quotaUser);
    }

    @Override
    public LogIn setUserIp(java.lang.String userIp) {
      return (LogIn) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String username;

    /**

     */
    public java.lang.String getUsername() {
      return username;
    }

    public LogIn setUsername(java.lang.String username) {
      this.username = username;
      return this;
    }

    @com.google.api.client.util.Key
    private java.lang.String password;

    /**

     */
    public java.lang.String getPassword() {
      return password;
    }

    public LogIn setPassword(java.lang.String password) {
      this.password = password;
      return this;
    }

    @Override
    public LogIn set(String parameterName, Object value) {
      return (LogIn) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link Users}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Users}. */
    @Override
    public Users build() {
      return new Users(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link UsersRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setUsersRequestInitializer(
        UsersRequestInitializer usersRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(usersRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
